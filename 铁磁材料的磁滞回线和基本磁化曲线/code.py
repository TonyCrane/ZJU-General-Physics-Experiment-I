import numpy as np
import matplotlib.pyplot as plt
from matplotlib.ticker import MultipleLocator
from scipy.interpolate import make_interp_spline

plt.rc("font", family="Source Han Serif CN", size=13, weight="bold")

N1 = 150
N2 = 150
L = 0.13
S = 1.24e-4
R1 = 2.5
R2 = 10000
C = 3e-6

Ux1 = np.array([0.024, 0.044, 0.070, 0.085, 0.110, 0.155, 0.230, 0.35, 0.56, 1.1])
Uy1 = np.array([0.025, 0.050, 0.085, 0.105, 0.125, 0.155, 0.190, 0.21, 0.23, 0.25])
H = N1 * Ux1 / (L * R1 * 2 * np.sqrt(2))
B = R2 * Uy1 * C / (N2 * S * 2 * np.sqrt(2))
mu = B / H
# mu = mu / (4 * np.pi * 10**-7)

print(H)
print(B)
print(mu)

_, mu_axis = plt.subplots()
B_axis = mu_axis.twinx()

plt.title("μ-H / B-H 曲线", weight="bold", size=20)
mu_axis.set_xlabel("H/(A/m)", weight="bold", size=16)
mu_axis.set_ylabel("μ/(H/m)", weight="bold", size=16)
B_axis.set_ylabel("B/T", weight="bold", size=16)

mu_axis.scatter(H, mu, s=15)
B_axis.scatter(H, B, marker="x")

plt.show()

Ux2 = np.array([
    0.15, 0.18, 0.20, 0.24, 0.30, 0.43, 0.30, 0.24, 0.20, 0.10,
    0, -0.02, -0.04, -0.06, -0.08, -0.10, -0.12, -0.16, -0.18,
    -0.20, -0.22, -0.24, -0.26, -0.28, -0.30, -0.34, -0.43,
    -0.30, -0.26, -0.20, -0.10, -0.04, 0, 0.02, 0.04,
    0.05, 0.08, 0.10, 0.12, 0.14
])
Uy2 = np.array([
    0, 0.06, 0.12, 0.16, 0.19, 0.22, 0.21, 0.20, 0.19, 0.17,
    0.14, 0.13, 0.12, 0.10, 0.09, 0.07, 0.05, 0, -0.06,
    -0.09, -0.12, -0.15, -0.17, -0.18, -0.19, -0.20, -0.23,
    -0.21, -0.20, -0.19, -0.17, -0.15, -0.13, -0.12, -0.11,
    -0.10, -0.08, -0.06, -0.04, -0.01
])
H2 = N1 * Ux2 / (L * R1 * 2 * np.sqrt(2))
B2 = R2 * Uy2 * C / (N2 * S * 2 * np.sqrt(2))
print(H2)
print(B2*1e4)

plt.title("B-H 曲线", weight="bold", size=20)
plt.xlabel("H/(A/m)", weight="bold", size=16)
plt.ylabel("B/T", weight="bold", size=16)

ax = plt.gca()
ax.yaxis.set_minor_locator(MultipleLocator(0.01))
ax.yaxis.grid(True, which='minor')
ax.xaxis.set_minor_locator(MultipleLocator(5))
ax.xaxis.grid(True, which='minor')

plt.scatter(H2, B2)
plt.grid(which="major")
plt.show()

"""
[  3.91628371   7.17985347  11.42249416  13.87017148  17.94963368
  25.29266563  37.53105223  57.11247079  91.37995326 179.49633676]
[0.01425619 0.02851237 0.04847103 0.05987598 0.07128093 0.08838835
 0.10834701 0.11975195 0.1311569  0.14256185]
[0.00364023 0.00397116 0.00424347 0.00431689 0.00397116 0.00349462
 0.00288686 0.00209677 0.00143529 0.00079423]
[ 24.47677319  29.37212783  32.63569759  39.16283711  48.95354639
  70.16674983  48.95354639  39.16283711  32.63569759  16.3178488
   0.          -3.26356976  -6.52713952  -9.79070928 -13.05427904
 -16.3178488  -19.58141856 -26.10855807 -29.37212783 -32.63569759
 -35.89926735 -39.16283711 -42.42640687 -45.68997663 -48.95354639
 -55.48068591 -70.16674983 -48.95354639 -42.42640687 -32.63569759
 -16.3178488   -6.52713952   0.           3.26356976   6.52713952
   8.1589244   13.05427904  16.3178488   19.58141856  22.84498832]
[    0.           342.14844251   684.29688502   912.39584669
  1083.47006795  1254.5442892   1197.51954878  1140.49480837
  1083.47006795   969.42058711   798.34636586   741.32162544
   684.29688502   570.24740418   513.22266376   399.17318293
   285.12370209     0.          -342.14844251  -513.22266376
  -684.29688502  -855.37110627  -969.42058711 -1026.44532753
 -1083.47006795 -1140.49480837 -1311.56902962 -1197.51954878
 -1140.49480837 -1083.47006795  -969.42058711  -855.37110627
  -741.32162544  -684.29688502  -627.2721446   -570.24740418
  -456.19792335  -342.14844251  -228.09896167   -57.02474042]
"""